{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGift","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEdC,mBAAS,IAFK,mBAE3CC,EAF2C,KAE/BC,EAF+B,KAcnD,OACC,sBAAMC,SAVc,SAAEC,GACtBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKf,SACC,uBACCO,KAAK,OACLC,MAAQT,EACRU,SAhBuB,SAAEP,GAAF,OAASF,EAAeE,EAAEQ,OAAOF,a,+BCL/CG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEhBC,EAFgB,iDAEiCC,UAAWH,GAF5C,+DAGCI,MAAOF,GAHR,cAGhBG,EAHgB,gBAICA,EAASC,OAJV,uBAIdC,EAJc,EAIdA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAEtB,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXb,kBAkBfM,GAlBe,4CAAH,sDCCPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEzC,OACC,sBAAKc,UAAU,yCAAf,UACC,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHKO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECDf,SAAEA,GAAe,IAAD,EAEjBd,mBAAS,CAClCqB,KAAK,GACLa,SAAQ,IAJkC,mBAEpCC,EAFoC,KAE7BC,EAF6B,KAuB3C,OAhBAC,qBAAW,WAETxB,EAASC,GACPwB,MAAM,SAAAC,GAENC,YAAY,WAEXJ,EAAS,CACRf,KAAKkB,EACLL,SAAQ,MAGP,UAEJ,CAAEpB,IAEEqB,EDpB0BM,CAAc3B,GAAlCa,EAF6B,EAElCN,KAAaa,EAFqB,EAErBA,QAErB,OACC,qCACC,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBACb,qBAAKA,UAAU,YAAf,SAEEH,EAAOJ,KAAK,SAAAC,GAAG,OAAM,cAAC,EAAD,eAAkCA,GAAdA,EAAIC,aEVrCiB,EAAe,WAE3B,IAFiC,EAIK1C,mBAF1B,CAAE,kBAFmB,mBAIzB2C,EAJyB,KAIb5C,EAJa,KAUjC,OACC,qCACC,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAOE4C,EAAWpB,KAAK,SAAAT,GAAQ,OACvB,cAAC,EAAD,CAECA,SAAWA,GADLA,Y,MCxBb8B,IAASC,OACL,cAAC,EAAD,IACDC,SAASC,eAAe,W","file":"static/js/main.14a2211a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( { setCategories } ) => {\n\n\tconst [ inputValue, setInputValue] = useState('');\n\tconst handleInputChange = ( e ) => setInputValue( e.target.value );\n\n\tconst handleSubmit = ( e ) => {\n\t\te.preventDefault();\n\n\t\tif( inputValue.trim().length > 0 ){\n\t\t\tsetCategories( cats => [ inputValue, ...cats ] );\n\t\t\tsetInputValue('');\n\t\t} //end if\n\t};\n\n\treturn (\n\t\t<form onSubmit={ handleSubmit }>\n\t\t\t<input\n\t\t\t\ttype=\"text\" \n\t\t\t\tvalue={ inputValue }\n\t\t\t\tonChange={ handleInputChange }\n\t\t\t/>\n\t\t</form>\n\t)\n} //end component\n\nAddCategory.propTypes = {\n\tsetCategories : PropTypes.func.isRequired\n}\n","\nexport const getGift = async( category ) => {\n\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=dxQlXshz0xzQ3cHhgrvKGGKnC3uxICtR`;\n\tconst response = await fetch( url );\n\tconst { data } = await response.json();\n\n\tconst gifs = data.map( img => {\n\t\n\t\treturn {\n\t\t\tid: img.id,\n\t\t\ttitle: img.title,\n\t\t\turl: img.images.downsized_medium.url \n\t\t}\n\t} );\n\n\t// console.log( gifs );\n\t// setImages( gifs );\n\n\treturn gifs;\n\n} ","import React from 'react'\n\nexport const GifGridItem = ( { id, title, url } ) => {\n\n\treturn (\n\t\t<div className=\"card animate__animated animate__fadeIn\">\n\t\t\t<img src={ url } alt={ title } />\n\t\t\t<p>{ title }</p>\n \t\t</div>\n\t)\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ( { category } ) => {\n\n\tconst { data:images, loading } = useFetchGifs( category );\n\n\treturn (\n\t\t<>\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n\t\t\t{ loading && <p className=\"animate__animated animate__flash\">Loading ...</p> }\n\t\t\t<div className=\"card-grid\">\n\t\t\t\t{\n\t\t\t\t\timages.map( img => ( <GifGridItem key= { img.id } { ...img } /> ) ) \n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t)\n} //end component\n","import { useEffect, useState } from \"react\"\nimport { getGift } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n\tconst [state, setState] = useState({\n\t\tdata:[],\n\t\tloading:true\n\t});\n\n\tuseEffect( () => {\n\n\t\t\tgetGift( category )\n\t\t\t\t.then( imgs => {\n\n\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\t\n\t\t\t\t\t\tsetState({\n\t\t\t\t\t\t\tdata:imgs,\n\t\t\t\t\t\t\tloading:false,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}, 1000 );\n\t\t\t\t});\n\t}, [ category ] );\n\n\treturn state;\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n\tconst arr = [ 'one punch man' ];\n\n\tconst [ categories, setCategories ] = useState( arr );\n\t\n\t// const handleAdd = () => setCategories( [ ...categories, 'devil may cry' ] );\n\t// const handleAdd = () => setCategories( cats => [ ...cats, 'devil may cry' ] );\n\t\n\n\treturn (\n\t\t<>\n\t\t\t<h2>GifExpertApp</h2>\n\t\t\t<AddCategory setCategories={ setCategories } />\n\t\t\t<hr />\t\t\n\t\t\t{/* <button onClick={ handleAdd }>Agregar</button> */}\n\t\t\t<ol>\n\t\t\t\t{\n\t\t\t\t\t// categories.map( category => ( \n\t\t\t\t\t// \t<li key={ category }>\n\t\t\t\t\t\t// { category }\n\t\t\t\t\t\t// </li> \n\t\t\t\t\t// ) )\n\t\t\t\t\tcategories.map( category => ( \n\t\t\t\t\t\t<GifGrid \n\t\t\t\t\t\t\tkey={ category }\n\t\t\t\t\t\t\tcategory={ category } \n\t\t\t\t\t\t/>\t \n\t\t\t\t\t) )\n\t\t\t\t}\n\t\t\t</ol>\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n   document.getElementById('root')\n);\n\n"],"sourceRoot":""}